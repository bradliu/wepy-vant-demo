<style lang="scss">

@import '../styles/var.scss';

.van-search {
  display: flex;
  padding: 7px 15px;
  align-items: center;
  box-sizing: border-box;

  &__field {
    flex: 1;
    border-radius: 4px;

    &__left-icon {
      color: $gray-dark;
    }
  }

  &--show-action {
    padding-right: 0;
  }

  input {
    &::-webkit-search-decoration,
    &::-webkit-search-cancel-button,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
      display: none;
    }
  }

  &__action {
    padding: 0 10px;
    font-size: 14px;
    line-height: 30px;
    color: $gray-darker;

    &:active {
      background-color: $active-color;
    }
  }
}

</style>

<template>

<view
  class="van-search custom-class {{ showAction || useActionSlot ? 'van-search--show-action' : '' }}"
  style="background: {{ background }}"
>
  <view class="van-search__field">
    <van-field
      clearable
      type="search"
      left-icon="search"
      border="{{ false }}"
      confirm-type="search"
      value="{{ currentValue }}"
      disabled="{{ disabled }}"
      readonly="{{ readony }}"
      maxlength="{{ maxlength }}"
      placeholder="{{ placeholder }}"
      custom-style="padding: 3px 10px"
      bind:blur="onBlur"
      bind:focus="onFocus"
      bind:change="onChange"
      bind:confirm="onSearch"
    />
  </view>
  <view wx:if="{{ showAction || useActionSlot }}" class="van-search__action">
    <slot wx:if="{{ useActionSlot }}" name="action" />
    <view wx:else bind:tap="onCancel" class="cancel-class">取消</view>
  </view>
</view>

</template>

<script>
import wepy from 'wepy'
import ComOptionsMixin from '../mixins/com-options'
import vanField from '../components/van-field'

export default class vanSearch extends wepy.component {

  mixins = [ ComOptionsMixin ]
  
  components = {
    'van-field': vanField
  }
  
  props = {
    externalClasses: {
      type: Array,
      default: ['custom-class', 'cancel-class']
    },
    options: Object,
    disabled: {
      type: String,
      default: 'n'
    },
    readonly: {
      type: String,
      default: 'n'
    },
    showAction: {
      type: String,
      default: 'n'
    },
    useActionSlot: {
      type: String,
      default: 'n'
    },
    placeholder: String,
    value: {
      type: String
    },
    background: {
      type: String,
      default: '#f2f2f2'
    },
    maxlength: {
      type: String,
      default: '-1'
    }
  }
  
  watch = {
    value(currentValue) {
      this.currentValue = currentValue;
      this.$apply();
    }
  }
  
  methods = {
    onChange(event) {
      this.$emit('change', event.detail);
    },

    onCancel() {
      this.currentValue = '';
      this.$emit('cancel');
      this.$emit('change', '');
    },

    onSearch() {
      this.$emit('search', this.currentValue);
    },

    onFocus() {
      this.$emit('focus');
    },

    onBlur() {
      this.$emit('blur');
    }
  }
  
  onLoad() {
    this.currentValue = this.data.value;
    this.$apply();
  }
  
}
</script>
