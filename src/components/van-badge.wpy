<style lang="scss">

@import '../styles/var.scss';
@import '../styles/hairline.scss';

.van-badge {
  display: block;
  overflow: hidden;
  font-size: 14px;
  line-height: 1.4;
  user-select: none;
  color: $gray-darker;
  word-break: break-all;
  box-sizing: border-box;
  padding: 20px 12px 20px 9px;
  background-color: $background-color;
  border-left: 3px solid transparent;

  &:active {
    background-color: $active-color;
  }

  &::after {
    border-bottom-width: 1px;
  }

  &--active {
    font-weight: bold;
    color: $text-color;
    border-color: $red;

    &::after {
      border-right-width: 1px;
    }

    &,
    &:active {
      background-color: $white;
    }
  }

  &__info {
    position: absolute;
    top: 2px;
    right: 2px;
    color: $white;
    font-size: 10px;
    font-weight: normal;
    transform: scale(0.8);
    text-align: center;
    box-sizing: border-box;
    padding: 0 6px;
    min-width: 18px;
    line-height: 18px;
    border-radius: 9px;
    background-color: $red;
  }
}

</style>

<template>

<view class="van-badge van-hairline custom-class {{ active ? 'van-badge--active' : '' }}" bind:tap="onClick">
  <view wx:if="{{ info }}" class="van-badge__info">{{ info }}</view>
  {{ title }}
</view>

</template>

<script>
import wepy from 'wepy'

const BADGE_GROUP_PATH = '../badge-group/index';

Component({
  options: {
    addGlobalClass: true
  },

  externalClasses: ['custom-class'],

  relations: {
    [BADGE_GROUP_PATH]: {
      type: 'ancestor'
    }
  },

  properties: {
    info: Number,
    title: String
  },

  methods: {
    onClick() {
      const group = this.getRelationNodes(BADGE_GROUP_PATH)[0];
      if (group) {
        group.setActive(this);
      }
    },

    setActive(active) {
      this.setData({ active });
    }
  }
});

export default class vanBadge extends wepy.component {
  
  
}
</script>
